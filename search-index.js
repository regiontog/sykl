var N=null,E="",T="t",U="u",searchIndex={};
var R=["result","error","response","status","Sends a get request to…","information","station_id","address","capacity","is_installed","is_renting","num_bikes_available","num_docks_available","is_returning","last_reported","joinedstation","sykl::bikeshare","try_from","try_into","borrow_mut","type_id","borrow","typeid","sykl::formatting","formatter","serialize","deserialize","Information","JoinedStation","JoinedStatus"];

searchIndex["sykl"]={"doc":E,"i":[[3,"Void","sykl",E,N,N],[5,"main",E,E,N,[[],[R[0]]]],[5,"print",E,E,N,[[],[[R[0],["void",R[1]]],["void"],[R[1]]]]],[5,"handle_error",E,"A \"best effort\" to print a usable error to the user in…",N,[[[R[1]]],[["i32"],[R[1]],[R[0],["i32",R[1]]]]]],[0,"api",E,E,N,N],[5,"get","sykl::api","Sends a get request to a specific url with the…",N,[[["str"]],[[R[0],[R[2],R[1]]],[R[1]],[R[2]]]]],[5,R[3],E,R[4],N,[[],[["api",[R[3]]],[R[0],["api",R[1]]],[R[1]]]]],[5,R[5],E,R[4],N,[[],[["api",[R[5]]],[R[1]],[R[0],["api",R[1]]]]]],[17,"CLIENT_IDENTIFIER",E,"The Client-Identifier of this application.",N,N],[0,"bikeshare","sykl",E,N,N],[3,"Api",R[16],"Both endpoints used by this application has the same top…",N,N],[12,"data",E,E,0,N],[12,"last_updated",E,E,0,N],[3,"ApiData",E,"Both endpoints used by this application has the same data…",N,N],[12,"stations",E,E,1,N],[3,"Status",E,"The data inside the station_status endpoint is modelled by…",N,N],[12,R[6],E,E,2,N],[12,R[9],E,E,2,N],[12,R[10],E,E,2,N],[12,R[11],E,E,2,N],[12,R[12],E,E,2,N],[12,R[13],E,E,2,N],[12,R[14],E,E,2,N],[3,R[27],E,"The data inside the station_information endpoint is…",N,N],[12,R[6],E,E,3,N],[12,"name",E,E,3,N],[12,R[7],E,E,3,N],[12,"lat",E,E,3,N],[12,"lon",E,E,3,N],[12,R[8],E,E,3,N],[3,R[28],E,"The status struct contains \"dynamic\" content about…",N,N],[12,R[6],E,E,4,N],[12,"name",E,E,4,N],[12,R[7],E,E,4,N],[12,"lat",E,E,4,N],[12,"lon",E,E,4,N],[12,R[8],E,E,4,N],[12,R[3],E,E,4,N],[3,R[29],E,"The status content of `JoinedStation`.",N,N],[12,R[9],E,E,5,N],[12,R[10],E,E,5,N],[12,R[11],E,E,5,N],[12,R[12],E,E,5,N],[12,R[13],E,E,5,N],[12,R[14],E,E,5,N],[5,"join",E,"Joins the data from status and information into a hashmap…",N,[[["apidata",[R[3]]],["apidata",[R[5]]],[R[3]],[R[5]]],[["hashmap",["string",R[15]]],["string"],[R[15]]]]],[17,"_IMPL_DESERIALIZE_FOR_Api",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Api",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_ApiData",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_ApiData",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Status",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Status",E,E,N,N],[17,"_IMPL_DESERIALIZE_FOR_Information",E,E,N,N],[17,"_IMPL_SERIALIZE_FOR_Information",E,E,N,N],[0,"formatting","sykl",E,N,N],[3,"Row",R[23],"This struct represents a row in the pretty printed output.",N,N],[12,"name",E,E,6,N],[12,"docks",E,E,6,N],[12,"bikes",E,E,6,N],[5,"pretty_print_stations",E,"Prints each stations name, number of available docks and…",N,[[]]],[17,"EXTRA_PADDING",E,"The extra padding to add in addition to the length of the…",N,N],[17,"PLACEHOLDER",E,"The string to use in the case where no status information…",N,N],[17,"HEADER",E,"The headers used in the pretty print.",N,N],[11,"into","sykl",E,7,[[],[U]]],[11,"from",E,E,7,[[[T]],[T]]],[11,R[17],E,E,7,[[[U]],[R[0]]]],[11,R[18],E,E,7,[[],[R[0]]]],[11,R[21],E,E,7,[[["self"]],[T]]],[11,R[19],E,E,7,[[["self"]],[T]]],[11,R[20],E,E,7,[[["self"]],[R[22]]]],[11,"into",R[16],E,0,[[],[U]]],[11,"from",E,E,0,[[[T]],[T]]],[11,R[17],E,E,0,[[[U]],[R[0]]]],[11,R[18],E,E,0,[[],[R[0]]]],[11,R[21],E,E,0,[[["self"]],[T]]],[11,R[19],E,E,0,[[["self"]],[T]]],[11,R[20],E,E,0,[[["self"]],[R[22]]]],[11,"into",E,E,1,[[],[U]]],[11,"from",E,E,1,[[[T]],[T]]],[11,R[17],E,E,1,[[[U]],[R[0]]]],[11,R[18],E,E,1,[[],[R[0]]]],[11,R[21],E,E,1,[[["self"]],[T]]],[11,R[19],E,E,1,[[["self"]],[T]]],[11,R[20],E,E,1,[[["self"]],[R[22]]]],[11,"into",E,E,2,[[],[U]]],[11,"from",E,E,2,[[[T]],[T]]],[11,R[17],E,E,2,[[[U]],[R[0]]]],[11,R[18],E,E,2,[[],[R[0]]]],[11,R[21],E,E,2,[[["self"]],[T]]],[11,R[19],E,E,2,[[["self"]],[T]]],[11,R[20],E,E,2,[[["self"]],[R[22]]]],[11,"into",E,E,3,[[],[U]]],[11,"from",E,E,3,[[[T]],[T]]],[11,R[17],E,E,3,[[[U]],[R[0]]]],[11,R[18],E,E,3,[[],[R[0]]]],[11,R[21],E,E,3,[[["self"]],[T]]],[11,R[19],E,E,3,[[["self"]],[T]]],[11,R[20],E,E,3,[[["self"]],[R[22]]]],[11,"into",E,E,4,[[],[U]]],[11,"from",E,E,4,[[[T]],[T]]],[11,R[17],E,E,4,[[[U]],[R[0]]]],[11,R[18],E,E,4,[[],[R[0]]]],[11,R[21],E,E,4,[[["self"]],[T]]],[11,R[19],E,E,4,[[["self"]],[T]]],[11,R[20],E,E,4,[[["self"]],[R[22]]]],[11,"into",E,E,5,[[],[U]]],[11,"from",E,E,5,[[[T]],[T]]],[11,R[17],E,E,5,[[[U]],[R[0]]]],[11,R[18],E,E,5,[[],[R[0]]]],[11,R[21],E,E,5,[[["self"]],[T]]],[11,R[19],E,E,5,[[["self"]],[T]]],[11,R[20],E,E,5,[[["self"]],[R[22]]]],[11,"into",R[23],E,6,[[],[U]]],[11,"from",E,E,6,[[[T]],[T]]],[11,"to_owned",E,E,6,[[["self"]],[T]]],[11,"clone_into",E,E,6,[[["self"],[T]]]],[11,R[17],E,E,6,[[[U]],[R[0]]]],[11,R[18],E,E,6,[[],[R[0]]]],[11,R[21],E,E,6,[[["self"]],[T]]],[11,R[19],E,E,6,[[["self"]],[T]]],[11,R[20],E,E,6,[[["self"]],[R[22]]]],[11,"clone",E,E,6,[[["self"]],["row"]]],[11,"fmt",R[16],E,0,[[["self"],[R[24]]],[R[0]]]],[11,"fmt",E,E,1,[[["self"],[R[24]]],[R[0]]]],[11,"fmt",E,E,2,[[["self"],[R[24]]],[R[0]]]],[11,"fmt",E,E,3,[[["self"],[R[24]]],[R[0]]]],[11,"fmt",E,E,4,[[["self"],[R[24]]],[R[0]]]],[11,"fmt",E,E,5,[[["self"],[R[24]]],[R[0]]]],[11,R[25],E,E,0,[[["self"],["__s"]],[R[0]]]],[11,R[25],E,E,1,[[["self"],["__s"]],[R[0]]]],[11,R[25],E,E,2,[[["self"],["__s"]],[R[0]]]],[11,R[25],E,E,3,[[["self"],["__s"]],[R[0]]]],[11,R[26],E,E,0,[[["__d"]],[R[0]]]],[11,R[26],E,E,1,[[["__d"]],[R[0]]]],[11,R[26],E,E,2,[[["__d"]],[R[0]]]],[11,R[26],E,E,3,[[["__d"]],[R[0]]]]],"p":[[3,"Api"],[3,"ApiData"],[3,"Status"],[3,R[27]],[3,R[28]],[3,R[29]],[3,"Row"],[3,"Void"]]};
initSearch(searchIndex);addSearchOptions(searchIndex);